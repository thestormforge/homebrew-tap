# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Stormforge < Formula
  desc "Automated Kubernetes Workload Rightsizing"
  homepage "https://www.stormforge.io/"
  version "6.0.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.0/stormforge_6.0.0_darwin_amd64.tar.gz"
      sha256 "e7c6b5392f8b985769657d4d5b040d794d8eacd187ef2bd9b3d8365596c3c92e"

      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.0/stormforge_6.0.0_darwin_arm64.tar.gz"
      sha256 "6f6060fc9b632fea1be1e59032047959fe367329dfbd235c2aacb8b5d52cf392"

      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://downloads.stormforge.io/stormforge-cli/v6.0.0/stormforge_6.0.0_linux_amd64.tar.gz"
        sha256 "f615ff835ff42f72e17511661ebd13fb09bdf0ddfb9aeb18a5839f46c20f62ae"

        def install
          bin.install "stormforge"

          # generate and install bash completion
          output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
          (bash_completion/"stormforge").write output

          # generate and install zsh completion
          output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
          (zsh_completion/"_stormforge").write output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://downloads.stormforge.io/stormforge-cli/v6.0.0/stormforge_6.0.0_linux_arm64.tar.gz"
        sha256 "2e7113279f43b58b1a43ba414efc51ecf0a464181fb12fff43c23d03c6a8b6fc"

        def install
          bin.install "stormforge"

          # generate and install bash completion
          output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
          (bash_completion/"stormforge").write output

          # generate and install zsh completion
          output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
          (zsh_completion/"_stormforge").write output
        end
      end
    end
  end
end
