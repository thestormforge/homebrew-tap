# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Stormforge < Formula
  desc "Automated Kubernetes Workload Rightsizing"
  homepage "https://www.stormforge.io/"
  version "6.0.1"

  on_macos do
    if Hardware::CPU.intel?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.1/stormforge_6.0.1_darwin_amd64.tar.gz"
      sha256 "7557f91fbfb80382aaebdf77f48979a2cead63aa35a0125b5e0ff1deba7ccb9a"

      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.1/stormforge_6.0.1_darwin_arm64.tar.gz"
      sha256 "556b1a0700023bb042529749f09e801fd5bf7a5f4f264ea5abebbca06a64024a"

      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.1/stormforge_6.0.1_linux_amd64.tar.gz"
      sha256 "a921293861441e26ec3ae61ba52caefab81358e9b03308c04f42d0e9549bf367"
      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.1/stormforge_6.0.1_linux_arm64.tar.gz"
      sha256 "9af5cbe3476f24f70391f83a08f9e8d0fd3c62da496bbb5a639ceec381e26e50"
      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
  end
end
