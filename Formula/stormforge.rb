# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Stormforge < Formula
  desc "Automated Kubernetes Workload Rightsizing"
  homepage "https://www.stormforge.io/"
  version "6.0.2"

  on_macos do
    if Hardware::CPU.intel?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.2/stormforge_6.0.2_darwin_amd64.tar.gz"
      sha256 "3adacc30f8754bd27d6b51a3edf982dee7f53adb3165e4f4bb9b1c82ace17992"

      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.2/stormforge_6.0.2_darwin_arm64.tar.gz"
      sha256 "b00f1be9a29a837493341397047d1a9f0d3d04ab36602c6551e6144a4ca1fe3c"

      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.2/stormforge_6.0.2_linux_amd64.tar.gz"
      sha256 "e8cef0b2419908a703cf5fa63c676cbbec9e5c36992bc1511902370bace4785a"
      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://downloads.stormforge.io/stormforge-cli/v6.0.2/stormforge_6.0.2_linux_arm64.tar.gz"
      sha256 "a0fc33c71aa44a0535631f777142b8ad45c9ca12415a65ad9b8e8c974482ef35"
      def install
        bin.install "stormforge"

        # generate and install bash completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "bash")
        (bash_completion/"stormforge").write output

        # generate and install zsh completion
        output = Utils.safe_popen_read("#{bin}/stormforge", "completion", "zsh")
        (zsh_completion/"_stormforge").write output
      end
    end
  end
end
